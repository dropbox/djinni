// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from example.djinni

#pragma once

#include <functional>
#include <ostream>

namespace textsort {

enum class sort_order : int {
    ASCENDING,
    DESCENDING,
    RANDOM,
};

static inline ::std::ostream& operator<<(::std::ostream& os, sort_order v) {
    os << "sort_order::";
    switch (v) {
        case sort_order::ASCENDING: return os << "ASCENDING";
        case sort_order::DESCENDING: return os << "DESCENDING";
        case sort_order::RANDOM: return os << "RANDOM";
        default: return os << "<Unsupported Value " << static_cast<int>(v) << ">";
    }
}

}  // namespace textsort

namespace std {

template <>
struct hash<::textsort::sort_order> {
    size_t operator()(::textsort::sort_order type) const {
        return std::hash<int>()(static_cast<int>(type));
    }
};

}  // namespace std
