// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from nested_collection.djinni

#import "DBNestedCollection.h"
#include <utility>
#include <vector>


@implementation DBNestedCollection

- (id)initWithNestedCollection:(DBNestedCollection *)nestedCollection
{
    if (self = [super init]) {
        std::vector<NSSet *> _setListTempVector;
        _setListTempVector.reserve([nestedCollection.setList count]);
        for (NSSet *currentValue_0 in nestedCollection.setList) {
            NSSet *copiedValue_0;
            std::vector<NSString *> copiedValue_0TempVector;
            copiedValue_0TempVector.reserve([currentValue_0 count]);
            for (NSString *currentValue_1 in currentValue_0) {
                NSString *copiedValue_1;
                copiedValue_1 = [currentValue_1 copy];
                copiedValue_0TempVector.push_back(copiedValue_1);
            }
            copiedValue_0 = [NSSet setWithObjects:&copiedValue_0TempVector[0] count:copiedValue_0TempVector.size()];
            _setListTempVector.push_back(copiedValue_0);
        }
        _setList = [NSArray arrayWithObjects:&_setListTempVector[0] count:_setListTempVector.size()];
    }
    return self;
}

- (id)initWithSetList:(NSArray *)setList
{
    if (self = [super init]) {
        _setList = setList;
    }
    return self;
}


@end
