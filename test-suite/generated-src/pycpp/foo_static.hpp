// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from foo_static.djinni

#pragma once

#include <chrono>
#include <cstdint>
#include <experimental/optional>
#include <string>

namespace testsuite {

class FooStatic {
public:
    virtual ~FooStatic() {}

    /** Static method with documentation */
    static std::string update_static_messg_to(const std::string & static_string);

    /**
     * Static method with long documentation
     * (Second line of multi-line documentation.
     *   Indented third line of multi-line documentation.)
     */
    static std::string get_static_messg();

    static int32_t update_static_counter_by(int32_t plus);

    static int32_t update_static_counter_to(int32_t init);

    static int32_t get_static_counter();

    static std::chrono::system_clock::time_point date_id(const std::chrono::system_clock::time_point & d);

    static std::experimental::optional<std::chrono::system_clock::time_point> opt_date_id(const std::experimental::optional<std::chrono::system_clock::time_point> & od);

    static std::experimental::optional<int64_t> opt_i64_id(std::experimental::optional<int64_t> od);
};

}  // namespace testsuite
