// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from interface_inheritance.djinni

package com.dropbox.djinni.test;

import java.util.concurrent.atomic.AtomicBoolean;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

public abstract class InterfaceInheritanceConstant {
    @Nonnull
    public static final String BASE_METHOD_RETURN_VALUE = "base_method";

    @Nonnull
    public static final String BASE_OVERRIDE_METHOD_RETURN_VALUE = "override_method";

    @Nonnull
    public static final String SUB_METHOD_RETURN_VALUE = "sub_method";

    @Nonnull
    public static final String SUB_OVERRIDE_METHOD_RETURN_VALUE = "sub_override_method";


    private static final class CppProxy extends InterfaceInheritanceConstant
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        // InterfaceInheritanceConstant methods
    }
}
