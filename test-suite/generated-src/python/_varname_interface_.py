# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from varnames.djinni

from djinni.support import MultiSet # default imported in all files
from djinni.exception import CPyException # default imported in all files
from djinni.pycffi_marshal import CPyRecord

from _varname_record_ import VarnameRecord
from _varname_record__helper import VarnameRecordHelper
from abc import ABCMeta, abstractmethod
from future.utils import with_metaclass
from PyCFFIlib_cffi import ffi, lib

from djinni import exception # this forces run of __init__.py which gives cpp option to call back into py to create exception

class VarnameInterface(with_metaclass(ABCMeta)):
    @abstractmethod
    def _rmethod_(self, _r_arg_):
        """
         We should also rewrite parameter names in docstrings.
         _r_arg_ should be rewritten.
         _i_arg_ should not.
        """
        raise NotImplementedError

    @abstractmethod
    def _imethod_(self, _i_arg_):
        raise NotImplementedError


class VarnameInterfaceCppProxy(VarnameInterface):
    def __init__(self, proxy):
        self._is_cpp_proxy = True
        self._cpp_impl = proxy
    def __del__(self):
        if not lib:
            return
        lib._varname_interface____wrapper_dec_ref(self._cpp_impl)

    def _rmethod_(self, _r_arg_):
        _ret_c = lib.cw___varname_interface___rmethod_(self._cpp_impl, CPyRecord.fromPy(VarnameRecord.c_data_set, _r_arg_))
        CPyException.toPyCheckAndRaise(_ret_c)
        _ret = CPyRecord.toPy(VarnameRecord.c_data_set, _ret_c)
        assert _ret is not None
        return _ret

    def _imethod_(self, _i_arg_):
        _ret_c = lib.cw___varname_interface___imethod_(self._cpp_impl, VarnameInterfaceHelper.fromPy(_i_arg_))
        CPyException.toPyCheckAndRaise(_ret_c)
        _ret = VarnameInterfaceHelper.toPy(_ret_c)
        assert _ret is not None
        return _ret

class VarnameInterfaceHelper:
    c_data_set = MultiSet()
    @staticmethod
    def toPy(obj):
        if obj == ffi.NULL:
            return None
        return VarnameInterfaceCppProxy(obj)

