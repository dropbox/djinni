# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from foo_constants.djinni

from djinni.support import MultiSet # default imported in all files
from djinni.exception import CPyException # default imported in all files
from djinni.pycffi_marshal import CPyBoxedI32, CPyPrimitive, CPyRecord, CPyString

from abc import ABCMeta, abstractmethod
from foo_constants import FooConstants
from foo_constants_helper import FooConstantsHelper
from future.utils import with_metaclass
from PyCFFIlib_cffi import ffi, lib

from djinni import exception # this forces run of __init__.py which gives cpp option to call back into py to create exception

class FooConstantsInterface(with_metaclass(ABCMeta)):
    BOOL_CONSTANT = True
    I8_CONSTANT = 1
    I16_CONSTANT = 2
    I32_CONSTANT = 3
    I64_CONSTANT = 4
    F32_CONSTANT = 5.0
    F64_CONSTANT = 6.0
    OPTIONAL_INTEGER_CONSTANT = 1
    STRING_CONSTANT = "another-string-constant"


FooConstantsInterface.OBJECT_CONSTANT = FooConstants(
    FooConstantsInterface.I32_CONSTANT,
    FooConstantsInterface.STRING_CONSTANT)


class FooConstantsInterfaceCppProxy(FooConstantsInterface):
    def __init__(self, proxy):
        self._is_cpp_proxy = True
        self._cpp_impl = proxy
    def __del__(self):
        if not lib:
            return
        lib.foo_constants_interface___wrapper_dec_ref(self._cpp_impl)

class FooConstantsInterfaceHelper:
    c_data_set = MultiSet()
    @staticmethod
    def toPy(obj):
        if obj == ffi.NULL:
            return None
        return FooConstantsInterfaceCppProxy(obj)

