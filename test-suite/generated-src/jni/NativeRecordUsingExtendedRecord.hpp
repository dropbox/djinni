// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from extended_record.djinni

#pragma once

#include "djinni_support.hpp"
#include "record_using_extended_record.hpp"

namespace djinni_generated {

class NativeRecordUsingExtendedRecord final {
public:
    using CppType = ::testsuite::RecordUsingExtendedRecord;
    using JniType = jobject;

    using Boxed = NativeRecordUsingExtendedRecord;

    ~NativeRecordUsingExtendedRecord();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeRecordUsingExtendedRecord();
    friend ::djinni::JniClass<NativeRecordUsingExtendedRecord>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/dropbox/djinni/test/RecordUsingExtendedRecord") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lcom/dropbox/djinni/test/ExtendedRecord;)V") };
    const jfieldID field_mEr { ::djinni::jniGetFieldID(clazz.get(), "mEr", "Lcom/dropbox/djinni/test/ExtendedRecord;") };
};

}  // namespace djinni_generated
