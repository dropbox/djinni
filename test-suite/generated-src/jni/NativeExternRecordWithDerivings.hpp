// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from yaml-test.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "extern_record_with_derivings.hpp"

namespace djinni_generated {

class NativeExternRecordWithDerivings final {
public:
    using CppType = ::ExternRecordWithDerivings;
    using JniType = jobject;

    using Boxed = NativeExternRecordWithDerivings;

    ~NativeExternRecordWithDerivings();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeExternRecordWithDerivings();
    friend ::djinni::JniClass<NativeExternRecordWithDerivings>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/dropbox/djinni/test/ExternRecordWithDerivings") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lcom/dropbox/djinni/test/RecordWithDerivings;Lcom/dropbox/djinni/test/Color;)V") };
    const jfieldID field_mMember { ::djinni::jniGetFieldID(clazz.get(), "mMember", "Lcom/dropbox/djinni/test/RecordWithDerivings;") };
    const jfieldID field_mE { ::djinni::jniGetFieldID(clazz.get(), "mE", "Lcom/dropbox/djinni/test/Color;") };
};

}  // namespace djinni_generated
