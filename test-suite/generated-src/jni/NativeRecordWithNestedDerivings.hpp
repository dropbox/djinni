// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from derivings.djinni

#pragma once

#include "djinni_support.hpp"
#include "record_with_nested_derivings.hpp"

namespace djinni { namespace jni {

class NativeRecordWithNestedDerivings final {
public:
    using CppType = ::djinni::cpp::RecordWithNestedDerivings;
    using JniType = jobject;

    static jobject toJava(JNIEnv*, ::djinni::cpp::RecordWithNestedDerivings);
    static ::djinni::cpp::RecordWithNestedDerivings fromJava(JNIEnv*, jobject);

    const djinni::GlobalRef<jclass> clazz { djinni::jniFindClass("com/dropbox/djinni/test/RecordWithNestedDerivings") };
    const jmethodID jconstructor { djinni::jniGetMethodID(clazz.get(), "<init>", "(ILcom/dropbox/djinni/test/RecordWithDerivings;)V") };
    const jfieldID field_mKey { djinni::jniGetFieldID(clazz.get(), "mKey", "I") };
    const jfieldID field_mRec { djinni::jniGetFieldID(clazz.get(), "mRec", "Lcom/dropbox/djinni/test/RecordWithDerivings;") };

private:
    NativeRecordWithNestedDerivings() {}
    friend class djinni::JniClass<::djinni::jni::NativeRecordWithNestedDerivings>;
};

} }  // namespace djinni::jni
