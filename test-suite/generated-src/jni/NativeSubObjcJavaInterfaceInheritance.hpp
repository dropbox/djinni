// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from interface_inheritance.djinni

#pragma once

#include "NativeBaseObjcJavaInterfaceInheritance.hpp"
#include "djinni_support.hpp"
#include "sub_objc_java_interface_inheritance.hpp"

namespace djinni_generated {

class NativeSubObjcJavaInterfaceInheritance final : ::djinni::JniInterface<::testsuite::SubObjcJavaInterfaceInheritance, NativeSubObjcJavaInterfaceInheritance> {
public:
    using CppType = std::shared_ptr<::testsuite::SubObjcJavaInterfaceInheritance>;
    using CppOptType = std::shared_ptr<::testsuite::SubObjcJavaInterfaceInheritance>;
    using JniType = jobject;

    using Boxed = NativeSubObjcJavaInterfaceInheritance;

    ~NativeSubObjcJavaInterfaceInheritance();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeSubObjcJavaInterfaceInheritance>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeSubObjcJavaInterfaceInheritance>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeSubObjcJavaInterfaceInheritance();
    friend ::djinni::JniClass<NativeSubObjcJavaInterfaceInheritance>;
    friend ::djinni::JniInterface<::testsuite::SubObjcJavaInterfaceInheritance, NativeSubObjcJavaInterfaceInheritance>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::testsuite::SubObjcJavaInterfaceInheritance
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        std::string base_method() override;
        std::string override_method() override;
        std::string sub_method() override;

    private:
        friend ::djinni::JniInterface<::testsuite::SubObjcJavaInterfaceInheritance, ::djinni_generated::NativeSubObjcJavaInterfaceInheritance>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/dropbox/djinni/test/SubObjcJavaInterfaceInheritance") };
    const jmethodID method_baseMethod { ::djinni::jniGetMethodID(clazz.get(), "baseMethod", "()Ljava/lang/String;") };
    const jmethodID method_overrideMethod { ::djinni::jniGetMethodID(clazz.get(), "overrideMethod", "()Ljava/lang/String;") };
    const jmethodID method_subMethod { ::djinni::jniGetMethodID(clazz.get(), "subMethod", "()Ljava/lang/String;") };
};

}  // namespace djinni_generated
