// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from single_language_interfaces.djinni

#pragma once

#include <atomic>
#include <experimental/optional>
#include "py_only_listener.hpp"
#ifdef __cplusplus
extern "C" {
#endif

#include "cw__py_only_listener.h"

#ifdef __cplusplus
}
#endif
struct DjinniWrapperPyOnlyListener final {
    DjinniWrapperPyOnlyListener(std::shared_ptr<::testsuite::PyOnlyListener>wo): wrapped_obj(wo) {};

    static std::shared_ptr<::testsuite::PyOnlyListener> get(djinni::Handle<DjinniWrapperPyOnlyListener> dw);
    static djinni::Handle<DjinniWrapperPyOnlyListener> wrap(std::shared_ptr<::testsuite::PyOnlyListener> obj);

    const std::shared_ptr<::testsuite::PyOnlyListener> wrapped_obj;
    std::atomic<size_t> ref_count {1};
};

class PyOnlyListenerPythonProxy final : public ::testsuite::PyOnlyListener {
    public:
        explicit PyOnlyListenerPythonProxy(DjinniObjectHandle * c_ptr);
        ~PyOnlyListenerPythonProxy();
        DjinniObjectHandle * get_m_py_obj_handle();

    private:
        DjinniObjectHandle * m_py_obj_handle;
};
