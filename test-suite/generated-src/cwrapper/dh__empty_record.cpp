// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from test.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "empty_record.hpp"

#include "dh__empty_record.hpp"

static void(*s_py_callback_empty_record___delete)(DjinniRecordHandle * );
void empty_record_add_callback___delete(void(* ptr)(DjinniRecordHandle * )) {
    s_py_callback_empty_record___delete = ptr;
}

void empty_record___delete(DjinniRecordHandle * drh) {
    s_py_callback_empty_record___delete(drh);
}
void optional_empty_record___delete(DjinniOptionalRecordHandle * drh) {
    s_py_callback_empty_record___delete((DjinniRecordHandle *) drh); // can't static cast, find better way
}
static DjinniRecordHandle * ( * s_py_callback_empty_record_python_create_empty_record)(void);

void empty_record_add_callback_python_create_empty_record(DjinniRecordHandle *( * ptr)(void)) {
    s_py_callback_empty_record_python_create_empty_record = ptr;
}

djinni::Handle<DjinniRecordHandle> DjinniEmptyRecord::fromCpp(const ::testsuite::EmptyRecord& dr) {

    djinni::Handle<DjinniRecordHandle> _aux(
        s_py_callback_empty_record_python_create_empty_record(
        ),
        empty_record___delete);
    return _aux;
}

::testsuite::EmptyRecord DjinniEmptyRecord::toCpp(djinni::Handle<DjinniRecordHandle> dh) {

    auto _aux = ::testsuite::EmptyRecord(
    );
    return _aux;
}

djinni::Handle<DjinniOptionalRecordHandle> DjinniEmptyRecord::fromCpp(std::experimental::optional<::testsuite::EmptyRecord> dc) {
    if (dc == std::experimental::nullopt) {
        return nullptr;
    }
    return djinni::optionals::toOptionalHandle(DjinniEmptyRecord::fromCpp(std::move(* dc)), optional_empty_record___delete);
}

std::experimental::optional<::testsuite::EmptyRecord>DjinniEmptyRecord::toCpp(djinni::Handle<DjinniOptionalRecordHandle> dh) {
     if (dh) {
        return std::experimental::optional<::testsuite::EmptyRecord>(DjinniEmptyRecord::toCpp(djinni::optionals::fromOptionalHandle(std::move(dh), empty_record___delete)));
    }
    return std::experimental::nullopt;
}

