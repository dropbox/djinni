// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from derivings.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "record_with_nested_derivings.hpp"

#include "dh__record_with_derivings.hpp"
#include "dh__record_with_nested_derivings.hpp"

static void(*s_py_callback_record_with_nested_derivings___delete)(DjinniRecordHandle * );
void record_with_nested_derivings_add_callback___delete(void(* ptr)(DjinniRecordHandle * )) {
    s_py_callback_record_with_nested_derivings___delete = ptr;
}

void record_with_nested_derivings___delete(DjinniRecordHandle * drh) {
    s_py_callback_record_with_nested_derivings___delete(drh);
}
void optional_record_with_nested_derivings___delete(DjinniOptionalRecordHandle * drh) {
    s_py_callback_record_with_nested_derivings___delete((DjinniRecordHandle *) drh); // can't static cast, find better way
}
static int32_t ( * s_py_callback_record_with_nested_derivings_get_record_with_nested_derivings_f1)(DjinniRecordHandle *);

void record_with_nested_derivings_add_callback_get_record_with_nested_derivings_f1(int32_t( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_record_with_nested_derivings_get_record_with_nested_derivings_f1 = ptr;
}

static DjinniRecordHandle * ( * s_py_callback_record_with_nested_derivings_get_record_with_nested_derivings_f2)(DjinniRecordHandle *);

void record_with_nested_derivings_add_callback_get_record_with_nested_derivings_f2(DjinniRecordHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_record_with_nested_derivings_get_record_with_nested_derivings_f2 = ptr;
}

static DjinniRecordHandle * ( * s_py_callback_record_with_nested_derivings_python_create_record_with_nested_derivings)(int32_t, DjinniRecordHandle *);

void record_with_nested_derivings_add_callback_python_create_record_with_nested_derivings(DjinniRecordHandle *( * ptr)(int32_t, DjinniRecordHandle *)) {
    s_py_callback_record_with_nested_derivings_python_create_record_with_nested_derivings = ptr;
}

djinni::Handle<DjinniRecordHandle> DjinniRecordWithNestedDerivings::fromCpp(const ::testsuite::RecordWithNestedDerivings& dr) {
    auto  _field_rec = DjinniRecordWithDerivings::fromCpp(dr.rec);

    djinni::Handle<DjinniRecordHandle> _aux(
        s_py_callback_record_with_nested_derivings_python_create_record_with_nested_derivings(
            dr.key,
            _field_rec.release()),
        record_with_nested_derivings___delete);
    return _aux;
}

::testsuite::RecordWithNestedDerivings DjinniRecordWithNestedDerivings::toCpp(djinni::Handle<DjinniRecordHandle> dh) {
    djinni::Handle<DjinniRecordHandle> _field_rec(s_py_callback_record_with_nested_derivings_get_record_with_nested_derivings_f2(dh.get()), record_with_derivings___delete);

    auto _aux = ::testsuite::RecordWithNestedDerivings(
        s_py_callback_record_with_nested_derivings_get_record_with_nested_derivings_f1(dh.get()),
        DjinniRecordWithDerivings::toCpp(std::move( _field_rec)));
    return _aux;
}

djinni::Handle<DjinniOptionalRecordHandle> DjinniRecordWithNestedDerivings::fromCpp(std::experimental::optional<::testsuite::RecordWithNestedDerivings> dc) {
    if (dc == std::experimental::nullopt) {
        return nullptr;
    }
    return djinni::optionals::toOptionalHandle(DjinniRecordWithNestedDerivings::fromCpp(std::move(* dc)), optional_record_with_nested_derivings___delete);
}

std::experimental::optional<::testsuite::RecordWithNestedDerivings>DjinniRecordWithNestedDerivings::toCpp(djinni::Handle<DjinniOptionalRecordHandle> dh) {
     if (dh) {
        return std::experimental::optional<::testsuite::RecordWithNestedDerivings>(DjinniRecordWithNestedDerivings::toCpp(djinni::optionals::fromOptionalHandle(std::move(dh), record_with_nested_derivings___delete)));
    }
    return std::experimental::nullopt;
}

