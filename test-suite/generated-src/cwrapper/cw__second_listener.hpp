// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from multiple_inheritance.djinni

#pragma once

#include <atomic>
#include <experimental/optional>
#include "second_listener.hpp"
#ifdef __cplusplus
extern "C" {
#endif

#include "cw__second_listener.h"

#ifdef __cplusplus
}
#endif
struct DjinniWrapperSecondListener final {
    DjinniWrapperSecondListener(std::shared_ptr<::testsuite::SecondListener>wo): wrapped_obj(wo) {};

    static std::shared_ptr<::testsuite::SecondListener> get(djinni::Handle<DjinniWrapperSecondListener> dw);
    static djinni::Handle<DjinniWrapperSecondListener> wrap(std::shared_ptr<::testsuite::SecondListener> obj);

    const std::shared_ptr<::testsuite::SecondListener> wrapped_obj;
    std::atomic<size_t> ref_count {1};
};

class SecondListenerPythonProxy final : public ::testsuite::SecondListener {
    public:
        explicit SecondListenerPythonProxy(DjinniObjectHandle * c_ptr);
        ~SecondListenerPythonProxy();
        DjinniObjectHandle * get_m_py_obj_handle();

        void second(void);

    private:
        DjinniObjectHandle * m_py_obj_handle;
};
