// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from primitive_list.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "primitive_list.hpp"

#include "dh__list_int64_t.hpp"
#include "dh__primitive_list.hpp"

static void(*s_py_callback_primitive_list___delete)(DjinniRecordHandle * );
void primitive_list_add_callback___delete(void(* ptr)(DjinniRecordHandle * )) {
    s_py_callback_primitive_list___delete = ptr;
}

void primitive_list___delete(DjinniRecordHandle * drh) {
    s_py_callback_primitive_list___delete(drh);
}
void optional_primitive_list___delete(DjinniOptionalRecordHandle * drh) {
    s_py_callback_primitive_list___delete((DjinniRecordHandle *) drh); // can't static cast, find better way
}
static DjinniObjectHandle * ( * s_py_callback_primitive_list_get_primitive_list_f1)(DjinniRecordHandle *);

void primitive_list_add_callback_get_primitive_list_f1(DjinniObjectHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_primitive_list_get_primitive_list_f1 = ptr;
}

static DjinniRecordHandle * ( * s_py_callback_primitive_list_python_create_primitive_list)(DjinniObjectHandle *);

void primitive_list_add_callback_python_create_primitive_list(DjinniRecordHandle *( * ptr)(DjinniObjectHandle *)) {
    s_py_callback_primitive_list_python_create_primitive_list = ptr;
}

djinni::Handle<DjinniRecordHandle> DjinniPrimitiveList::fromCpp(const ::testsuite::PrimitiveList& dr) {
    auto  _field_list = DjinniListInt64T::fromCpp(dr.list);

    djinni::Handle<DjinniRecordHandle> _aux(
        s_py_callback_primitive_list_python_create_primitive_list(
            _field_list.release()),
        primitive_list___delete);
    return _aux;
}

::testsuite::PrimitiveList DjinniPrimitiveList::toCpp(djinni::Handle<DjinniRecordHandle> dh) {
    djinni::Handle<DjinniObjectHandle> _field_list(s_py_callback_primitive_list_get_primitive_list_f1(dh.get()), list_int64_t___delete);

    auto _aux = ::testsuite::PrimitiveList(
        DjinniListInt64T::toCpp(std::move( _field_list)));
    return _aux;
}

djinni::Handle<DjinniOptionalRecordHandle> DjinniPrimitiveList::fromCpp(std::experimental::optional<::testsuite::PrimitiveList> dc) {
    if (dc == std::experimental::nullopt) {
        return nullptr;
    }
    return djinni::optionals::toOptionalHandle(DjinniPrimitiveList::fromCpp(std::move(* dc)), optional_primitive_list___delete);
}

std::experimental::optional<::testsuite::PrimitiveList>DjinniPrimitiveList::toCpp(djinni::Handle<DjinniOptionalRecordHandle> dh) {
     if (dh) {
        return std::experimental::optional<::testsuite::PrimitiveList>(DjinniPrimitiveList::toCpp(djinni::optionals::fromOptionalHandle(std::move(dh), primitive_list___delete)));
    }
    return std::experimental::nullopt;
}

