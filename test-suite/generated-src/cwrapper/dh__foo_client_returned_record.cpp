// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from foo_client_interface.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "foo_client_returned_record.hpp"

#include "dh__foo_client_returned_record.hpp"
#include "dh__foo_some_other_record.hpp"

static void(*s_py_callback_foo_client_returned_record___delete)(DjinniRecordHandle * );
void foo_client_returned_record_add_callback___delete(void(* ptr)(DjinniRecordHandle * )) {
    s_py_callback_foo_client_returned_record___delete = ptr;
}

void foo_client_returned_record___delete(DjinniRecordHandle * drh) {
    s_py_callback_foo_client_returned_record___delete(drh);
}
void optional_foo_client_returned_record___delete(DjinniOptionalRecordHandle * drh) {
    s_py_callback_foo_client_returned_record___delete((DjinniRecordHandle *) drh); // can't static cast, find better way
}
static int64_t ( * s_py_callback_foo_client_returned_record_get_foo_client_returned_record_f1)(DjinniRecordHandle *);

void foo_client_returned_record_add_callback_get_foo_client_returned_record_f1(int64_t( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_foo_client_returned_record_get_foo_client_returned_record_f1 = ptr;
}

static DjinniString * ( * s_py_callback_foo_client_returned_record_get_foo_client_returned_record_f2)(DjinniRecordHandle *);

void foo_client_returned_record_add_callback_get_foo_client_returned_record_f2(DjinniString *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_foo_client_returned_record_get_foo_client_returned_record_f2 = ptr;
}

static DjinniRecordHandle * ( * s_py_callback_foo_client_returned_record_get_foo_client_returned_record_f3)(DjinniRecordHandle *);

void foo_client_returned_record_add_callback_get_foo_client_returned_record_f3(DjinniRecordHandle *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_foo_client_returned_record_get_foo_client_returned_record_f3 = ptr;
}

static DjinniRecordHandle * ( * s_py_callback_foo_client_returned_record_python_create_foo_client_returned_record)(int64_t, DjinniString *, DjinniRecordHandle *);

void foo_client_returned_record_add_callback_python_create_foo_client_returned_record(DjinniRecordHandle *( * ptr)(int64_t, DjinniString *, DjinniRecordHandle *)) {
    s_py_callback_foo_client_returned_record_python_create_foo_client_returned_record = ptr;
}

djinni::Handle<DjinniRecordHandle> DjinniFooClientReturnedRecord::fromCpp(const ::testsuite::FooClientReturnedRecord& dr) {
    auto  _field_content = DjinniString::fromCpp(dr.content);
    auto  _field_some_record = DjinniFooSomeOtherRecord::fromCpp(dr.some_record);

    djinni::Handle<DjinniRecordHandle> _aux(
        s_py_callback_foo_client_returned_record_python_create_foo_client_returned_record(
            dr.record_id,
            _field_content.release(),
            _field_some_record.release()),
        foo_client_returned_record___delete);
    return _aux;
}

::testsuite::FooClientReturnedRecord DjinniFooClientReturnedRecord::toCpp(djinni::Handle<DjinniRecordHandle> dh) {
    std::unique_ptr<DjinniString> _field_content(s_py_callback_foo_client_returned_record_get_foo_client_returned_record_f2(dh.get()));
    djinni::Handle<DjinniRecordHandle> _field_some_record(s_py_callback_foo_client_returned_record_get_foo_client_returned_record_f3(dh.get()), foo_some_other_record___delete);

    auto _aux = ::testsuite::FooClientReturnedRecord(
        s_py_callback_foo_client_returned_record_get_foo_client_returned_record_f1(dh.get()),
        DjinniString::toCpp(std::move( _field_content)),
        DjinniFooSomeOtherRecord::toCpp(std::move( _field_some_record)));
    return _aux;
}

djinni::Handle<DjinniOptionalRecordHandle> DjinniFooClientReturnedRecord::fromCpp(std::experimental::optional<::testsuite::FooClientReturnedRecord> dc) {
    if (dc == std::experimental::nullopt) {
        return nullptr;
    }
    return djinni::optionals::toOptionalHandle(DjinniFooClientReturnedRecord::fromCpp(std::move(* dc)), optional_foo_client_returned_record___delete);
}

std::experimental::optional<::testsuite::FooClientReturnedRecord>DjinniFooClientReturnedRecord::toCpp(djinni::Handle<DjinniOptionalRecordHandle> dh) {
     if (dh) {
        return std::experimental::optional<::testsuite::FooClientReturnedRecord>(DjinniFooClientReturnedRecord::toCpp(djinni::optionals::fromOptionalHandle(std::move(dh), foo_client_returned_record___delete)));
    }
    return std::experimental::nullopt;
}

