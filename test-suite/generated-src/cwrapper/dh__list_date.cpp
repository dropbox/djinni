// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from foo_containers.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "foo_containers_record.hpp"

#include "dh__foo_containers_record.hpp"
#include "dh__foo_some_other_record.hpp"
#include "dh__list_binary.hpp"
#include "dh__list_date.hpp"
#include "dh__list_int32_t.hpp"
#include "dh__list_list_string.hpp"
#include "dh__list_optional_binary.hpp"
#include "dh__list_record_foo_some_other_record.hpp"
#include "dh__list_string.hpp"
#include "dh__map_boxed_int32_t_set_string.hpp"
#include "dh__map_int8_t_list_date.hpp"
#include "dh__map_int8_t_set_string.hpp"
#include "dh__map_optional_string_optional_string.hpp"
#include "dh__map_string_int32_t.hpp"
#include "dh__map_string_string.hpp"
#include "dh__set_optional_string.hpp"
#include "dh__set_string.hpp"
#include <chrono>
#include <experimental/optional>
#include <vector>

static void(*s_py_callback_list_date___delete)(DjinniObjectHandle *);
void list_date_add_callback___delete(void(* ptr)(DjinniObjectHandle *)) {
    s_py_callback_list_date___delete = ptr;
}

void list_date___delete(DjinniObjectHandle * drh) {
    s_py_callback_list_date___delete(drh);
}
void optional_list_date___delete(DjinniOptionalObjectHandle *  drh) {
    s_py_callback_list_date___delete((DjinniObjectHandle *) drh);
}
static uint64_t ( * s_py_callback_list_date__get_elem)(DjinniObjectHandle *, size_t);

void list_date_add_callback__get_elem(uint64_t( * ptr)(DjinniObjectHandle *, size_t)) {
    s_py_callback_list_date__get_elem = ptr;
}

static size_t ( * s_py_callback_list_date__get_size)(DjinniObjectHandle *);

void list_date_add_callback__get_size(size_t( * ptr)(DjinniObjectHandle *)) {
    s_py_callback_list_date__get_size = ptr;
}

static DjinniObjectHandle * ( * s_py_callback_list_date__python_create)(void);

void list_date_add_callback__python_create(DjinniObjectHandle *( * ptr)(void)) {
    s_py_callback_list_date__python_create = ptr;
}

static void ( * s_py_callback_list_date__python_add)(DjinniObjectHandle *, uint64_t);

void list_date_add_callback__python_add(void( * ptr)(DjinniObjectHandle *, uint64_t)) {
    s_py_callback_list_date__python_add = ptr;
}

djinni::Handle<DjinniObjectHandle> DjinniListDate::fromCpp(const std::vector<std::chrono::system_clock::time_point> & dc) {
    djinni::Handle<DjinniObjectHandle> _handle(s_py_callback_list_date__python_create(), & list_date___delete);
    size_t size = dc.size();
    for (int i = 0; i < size; i++) {
        s_py_callback_list_date__python_add(_handle.get(), DjinniDate::fromCpp(dc[i]));
    }

    return _handle;
}

std::vector<std::chrono::system_clock::time_point> DjinniListDate::toCpp(djinni::Handle<DjinniObjectHandle> dh) {
    std::vector<std::chrono::system_clock::time_point>_ret;
    size_t size = s_py_callback_list_date__get_size(dh.get());
    _ret.reserve(size);

    for (int i = 0; i < size; i++) {
        _ret.push_back(DjinniDate::toCpp(s_py_callback_list_date__get_elem(dh.get(), i)));
    }

    return _ret;
}

djinni::Handle<DjinniOptionalObjectHandle> DjinniListDate::fromCpp(std::experimental::optional<std::vector<std::chrono::system_clock::time_point>> dc) {
    if (dc == std::experimental::nullopt) {
        return nullptr;
    }
    return djinni::optionals::toOptionalHandle(DjinniListDate::fromCpp(std::move(* dc)), optional_list_date___delete);
}

std::experimental::optional<std::vector<std::chrono::system_clock::time_point>>DjinniListDate::toCpp(djinni::Handle<DjinniOptionalObjectHandle> dh) {
     if (dh) {
        return std::experimental::optional<std::vector<std::chrono::system_clock::time_point>>(DjinniListDate::toCpp(djinni::optionals::fromOptionalHandle(std::move(dh), list_date___delete)));
    }
    return std::experimental::nullopt;
}

