// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from varnames.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "_varname_interface_.hpp"

#include "cw___varname_interface_.hpp"
#include "dh___varname_record_.hpp"

std::shared_ptr<::testsuite::VarnameInterface> DjinniWrapperVarnameInterface::get(djinni::WrapperRef<DjinniWrapperVarnameInterface> dw) {
    if (dw) {
        return dw->wrapped_obj;
    }
    return nullptr;
}

void _varname_interface____wrapper_add_ref(DjinniWrapperVarnameInterface * dh) {
    dh->ref_count.fetch_add(1);
}
void _varname_interface____wrapper_dec_ref(DjinniWrapperVarnameInterface * dh) {
    const size_t ref = dh->ref_count.fetch_sub(1);
    if (ref == 1) {// value before sub is returned
        delete dh;
    }
}
djinni::Handle<DjinniWrapperVarnameInterface> DjinniWrapperVarnameInterface::wrap(std::shared_ptr<::testsuite::VarnameInterface> obj) {
    if (obj)
        return djinni::Handle<DjinniWrapperVarnameInterface>(new DjinniWrapperVarnameInterface{ std::move(obj) }, _varname_interface____wrapper_dec_ref);
    return nullptr;
}

DjinniRecordHandle * cw___varname_interface___rmethod_(DjinniWrapperVarnameInterface * djinni_this, DjinniRecordHandle * _r_arg_) {
    djinni::Handle<DjinniRecordHandle> __r_arg_(_r_arg_, _varname_record____delete);
    try {
        return DjinniVarnameRecord::fromCpp(djinni_this->wrapped_obj->_rmethod_(DjinniVarnameRecord::toCpp(std::move(__r_arg_)))).release();
    } CW_TRANSLATE_EXCEPTIONS_RETURN(0);
}

DjinniWrapperVarnameInterface * cw___varname_interface___imethod_(DjinniWrapperVarnameInterface * djinni_this, DjinniWrapperVarnameInterface * _i_arg_) {
    djinni::Handle<DjinniWrapperVarnameInterface> __i_arg_(_i_arg_, _varname_interface____wrapper_dec_ref);
    try {
        return DjinniWrapperVarnameInterface::wrap(djinni_this->wrapped_obj->_imethod_(DjinniWrapperVarnameInterface::get(std::move(__i_arg_)))).release();
    } CW_TRANSLATE_EXCEPTIONS_RETURN(0);
}
