// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from varnames.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "_varname_record_.hpp"

#include "dh___varname_record_.hpp"

static void(*s_py_callback__varname_record____delete)(DjinniRecordHandle * );
void _varname_record__add_callback___delete(void(* ptr)(DjinniRecordHandle * )) {
    s_py_callback__varname_record____delete = ptr;
}

void _varname_record____delete(DjinniRecordHandle * drh) {
    s_py_callback__varname_record____delete(drh);
}
void optional__varname_record____delete(DjinniOptionalRecordHandle * drh) {
    s_py_callback__varname_record____delete((DjinniRecordHandle *) drh); // can't static cast, find better way
}
static int8_t ( * s_py_callback__varname_record__get__varname_record__f1)(DjinniRecordHandle *);

void _varname_record__add_callback_get__varname_record__f1(int8_t( * ptr)(DjinniRecordHandle *)) {
    s_py_callback__varname_record__get__varname_record__f1 = ptr;
}

static DjinniRecordHandle * ( * s_py_callback__varname_record__python_create__varname_record_)(int8_t);

void _varname_record__add_callback_python_create__varname_record_(DjinniRecordHandle *( * ptr)(int8_t)) {
    s_py_callback__varname_record__python_create__varname_record_ = ptr;
}

djinni::Handle<DjinniRecordHandle> DjinniVarnameRecord::fromCpp(const ::testsuite::VarnameRecord& dr) {

    djinni::Handle<DjinniRecordHandle> _aux(
        s_py_callback__varname_record__python_create__varname_record_(
            dr._field_),
        _varname_record____delete);
    return _aux;
}

::testsuite::VarnameRecord DjinniVarnameRecord::toCpp(djinni::Handle<DjinniRecordHandle> dh) {

    auto _aux = ::testsuite::VarnameRecord(
        s_py_callback__varname_record__get__varname_record__f1(dh.get()));
    return _aux;
}

djinni::Handle<DjinniOptionalRecordHandle> DjinniVarnameRecord::fromCpp(std::experimental::optional<::testsuite::VarnameRecord> dc) {
    if (dc == std::experimental::nullopt) {
        return nullptr;
    }
    return djinni::optionals::toOptionalHandle(DjinniVarnameRecord::fromCpp(std::move(* dc)), optional__varname_record____delete);
}

std::experimental::optional<::testsuite::VarnameRecord>DjinniVarnameRecord::toCpp(djinni::Handle<DjinniOptionalRecordHandle> dh) {
     if (dh) {
        return std::experimental::optional<::testsuite::VarnameRecord>(DjinniVarnameRecord::toCpp(djinni::optionals::fromOptionalHandle(std::move(dh), _varname_record____delete)));
    }
    return std::experimental::nullopt;
}

