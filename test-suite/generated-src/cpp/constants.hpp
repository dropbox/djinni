// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from constants.djinni

#pragma once

#include "../../handwritten-src/cpp/optional.hpp"
#include "constant_record.hpp"
#include <cstdint>
#include <string>
#include <utility>

namespace testsuite {

/** Record containing constants */
struct Constants final {

    /** bool_constant has documentation. */
    static constexpr const bool BOOL_CONSTANT = { true };
    static constexpr const int8_t I8_CONSTANT = { 1 };
    static constexpr const int16_t I16_CONSTANT = { 2 };
    static constexpr const int32_t I32_CONSTANT = { 3 };
    static constexpr const int64_t I64_CONSTANT = { 4 };
    static constexpr const float F32_CONSTANT = { 5.0f };
    /**
     * f64_constant has long documentation.
     * (Second line of multi-line documentation.
     *   Indented third line of multi-line documentation.)
     */
    static constexpr const double F64_CONSTANT = { 5.0 };
    static constexpr const std::experimental::optional<bool> OPT_BOOL_CONSTANT = { true };
    static constexpr const std::experimental::optional<int8_t> OPT_I8_CONSTANT = { 1 };
    /** opt_i16_constant has documentation. */
    static constexpr const std::experimental::optional<int16_t> OPT_I16_CONSTANT = { 2 };
    static constexpr const std::experimental::optional<int32_t> OPT_I32_CONSTANT = { 3 };
    static constexpr const std::experimental::optional<int64_t> OPT_I64_CONSTANT = { 4 };
    /**
     * opt_f32_constant has long documentation.
     * (Second line of multi-line documentation.
     *   Indented third line of multi-line documentation.)
     */
    static constexpr const std::experimental::optional<float> OPT_F32_CONSTANT = { 5.0 };
    static constexpr const std::experimental::optional<double> OPT_F64_CONSTANT = { 5.0 };
    static  const std::string STRING_CONSTANT;
    static  const std::experimental::optional<std::string> OPT_STRING_CONSTANT;
    static  const ConstantRecord OBJECT_CONSTANT;
    /**
     * No support for null optional constants
     * No support for optional constant records
     * No support for constant binary, list, set, map
     */
    static constexpr const bool DUMMY = { false };

};

}  // namespace testsuite
